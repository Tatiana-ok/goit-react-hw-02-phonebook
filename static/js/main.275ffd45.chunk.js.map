{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onNameChange","e","setState","currentTarget","value","onNumberChange","handleSubmit","preventDefault","props","onSubmit","reset","className","s","containerForm","this","formInput","type","onChange","btnForm","Component","ContactList","contacts","onDeleteContact","listOfContact","map","contact","itemOfListContact","itemNameContact","itemNumberContact","btnOfListContact","onClick","id","Filter","onChangeFilter","filterLabel","filterInput","App","filter","addContact","contactNew","find","toLowerCase","includes","alert","newContact","shortid","generate","prevState","contactId","getVisibleContacts","normolizedFilter","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.275ffd45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3TBgA\",\"filterLabel\":\"Filter_filterLabel__thT4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1DhSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOfContact\":\"ContactList_listOfContact__1uSMV\",\"itemOfListContact\":\"ContactList_itemOfListContact__8tf39\",\"itemNameContact\":\"ContactList_itemNameContact__1BlGt\",\"itemNumberContact\":\"ContactList_itemNumberContact__ny6I4\",\"btnOfListContact\":\"ContactList_btnOfListContact__2ezsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ContactForm_containerForm__2maLp\",\"formInput\":\"ContactForm_formInput__q9AvQ\",\"btnForm\":\"ContactForm_btnForm__3D5YK\"};","import {Component} from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    onNameChange = (e) => {\r\n        this.setState({name: e.currentTarget.value});\r\n    }\r\n\r\n    onNumberChange = (e) => {\r\n        this.setState({number: e.currentTarget.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({name: '', number: ''});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className={s.containerForm} onSubmit={this.handleSubmit} >\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input className={s.formInput} type=\"text\" onChange={this.onNameChange} />\r\n                </label>\r\n                <label>\r\n                    <p>Number</p>\r\n                    <input className={s.formInput} type=\"text\" onChange={this.onNumberChange}/>\r\n                </label>\r\n                <button className={s.btnForm}type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nfunction ContactList ({contacts = [], onDeleteContact}) {\r\n    return(\r\n        <>\r\n            <ul className = {s.listOfContact}>\r\n                {contacts.map(contact => (\r\n                    <li key={contact.id} className = {s.itemOfListContact}>\r\n                       <p className = {s.itemNameContact}>{contact.name} </p>\r\n                       <p className = {s.itemNumberContact}>{contact.number}</p>\r\n                       <button className = {s.btnOfListContact} type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>    \r\n        </>\r\n    )\r\n}\r\n\r\nContactList.propTypes ={\r\n    contacts: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value = '', onChangeFilter}) => {\r\n    return(\r\n        <>\r\n            <label className={s.filterLabel}>\r\n                Filter contacts by name\r\n                <input className={s.filterInput} type=\"text\" value={value} onChange={onChangeFilter} />\r\n            </label>\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes ={\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport default Filter;","import './App.css';\nimport s from './App.module.css';\nimport {Component} from 'react';\nimport shortid from 'shortid'\nimport contacts from './contacts.json';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: ''\n  }\n\n  addContact = contactNew => {\n    if(this.state.contacts.find(contact => contact.name.toLowerCase().includes(contactNew.name.toLowerCase()))) {\n      alert(`${contactNew.name} is already in contacts`)\n    }else{\n      const newContact = {\n        id: shortid.generate(),\n        name: contactNew.name,\n        number: contactNew.number\n      }\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts]\n      }))\n    }\n  }\n\n  onDeleteContact = contactId =>{\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contactId !== contact.id)\n    }))\n  }\n\n  onChangeFilter = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  getVisibleContacts = () => {\n    const {contacts, filter} = this.state;\n    const normolizedFilter = filter. toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normolizedFilter));\n  }\n\n  render(){\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact}/>\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChangeFilter={this.onChangeFilter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.onDeleteContact}/>\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}